Program Body
{
  int _1_ASSUME;
  _1_ASSUME = 0;
  int _1_PROVE = 0;
  int p1z;
  int p1i;
  p1i = 0;
  int p2z;
  int p2i;
  p2i = 1;
  _1_ASSUME = p1z == p2z;
  while (p1i <= 10)
  {
    p1i = p1i + 1;
  }

  while (p2i <= 10)
  {
    p2i = p2i + 1;
  }

  _1_PROVE = p1i == p2i;
}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ p1i:int _1_PROVE:int p2i:int _1_ASSUME:int p1z:int p2z:int}

Output in normal notation:
1. Frame axioms:
p1z1 = p1z
p2z1 = p2z

2. Output equations:
p1i1 = (_N1+0)
p2i1 = (_N2+1)

3. Other axioms:
((_N1+0)>10)
(_n1<_N1) -> ((_n1+0)<=10)
((_N2+1)>10)
(_n2<_N2) -> ((_n2+1)<=10)

4. Assumption :
(p1z==p2z)

5. Assertion :
((_N1+0)==(_N2+1))



Successfully Proved Assertion

Programs are Equivalent

