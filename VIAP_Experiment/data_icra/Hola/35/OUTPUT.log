Program Body
{
  int _1_PROVE = 0;
  int n;
  n = __VERIFIER_nondet_int();
  int x;
  x = 0;
  while (x < n)
  {
    x = x + 1;
  }

  if (n > 0)
  {
    _1_PROVE = x == n;
  }

}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ x:int _1_PROVE:int n:int}

Output in normal notation:
1. Frame axioms:

2. Output equations:
x1 = (_N1+0)
n1 = __VERIFIER_nondet_int2

3. Other axioms:
(_N1>=(__VERIFIER_nondet_int2-0))
(_n1<_N1) -> ((_n1+0)<__VERIFIER_nondet_int2)

4. Assumption :

5. Assertion :
ite((__VERIFIER_nondet_int2>0),((_N1+0)==__VERIFIER_nondet_int2),0)
Strategy applied 1
VIAP_STANDARD_OUTPUT_True
