Program Body
{
  int _1_PROVE = 0;
  int n;
  n = __VERIFIER_nondet_int();
  int k;
  k = 1;
  int i;
  i = 1;
  int j;
  j = 0;
  while (i < n)
  {
    j = 0;
    while (j < i)
    {
      k = k + (i - j);
      j = j + 1;
    }

    i = i + 1;
  }

  _1_PROVE = k >= n;
}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ i:int k:int _1_PROVE:int j:int n:int}

Output in normal notation:
1. Frame axioms:

2. Output equations:
i1 = (_N2+1)
k1 = k5(_N2)
j1 = j5(_N2)
n1 = __VERIFIER_nondet_int2

3. Other axioms:
(_N1(_n2)>=((_n2+1)-0))
(_n1<_N1(_n2)) -> ((_n1+0)<(_n2+1))
k5((_n2+1)) = (((((((2*_N1(_n2))*(_n2+1))-((2*_N1(_n2))*0))+_N1(_n2))+(2*k5(_n2)))-(_N1(_n2)**2))/2)
j5((_n2+1)) = (_N1(_n2)+0)
k5(0) = 1
j5(0) = 0
(_N2>=(-(1)+__VERIFIER_nondet_int2))
(_n2<_N2) -> ((_n2+1)<__VERIFIER_nondet_int2)

4. Assumption :

5. Assertion :
(k5(_N2)>=__VERIFIER_nondet_int2)
VIAP_STANDARD_OUTPUT_True
