Program Body
{
  int _1_PROVE = 0;
  int flag;
  flag = __VERIFIER_nondet_int();
  int x;
  x = 1;
  int y;
  y = 1;
  int a;
  if (flag > 0)
  {
    a = 0;
  }
  else
  {
    a = 1;
  }

  while (__VERIFIER_nondet_int() > 0)
  {
    if (flag > 0)
    {
      a = x + y;
      x = x + 1;
    }
    else
    {
      a = (x + y) + 1;
      y = y + 1;
    }

    if ((a % 2) == 1)
      y = y + 1;

  }

  if (flag > 0)
    a = a + 1;

  _1_PROVE = (a % 2) == 1;
}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ y:int x:int flag:int _1_PROVE:int a:int}

Output in normal notation:
1. Frame axioms:

2. Output equations:
y1 = y9(_N1)
x1 = x9(_N1)
flag1 = __VERIFIER_nondet_int2
a1 = ite((__VERIFIER_nondet_int2>0),(a9(_N1)+1),a9(_N1))

3. Other axioms:
y9((_n1+1)) = ite(((ite((__VERIFIER_nondet_int2>0),(x9(_n1)+y9(_n1)),((x9(_n1)+y9(_n1))+1))%2)==1),(ite((__VERIFIER_nondet_int2>0),y9(_n1),(y9(_n1)+1))+1),ite((__VERIFIER_nondet_int2>0),y9(_n1),(y9(_n1)+1)))
x9((_n1+1)) = ite((__VERIFIER_nondet_int2>0),(x9(_n1)+1),x9(_n1))
a9((_n1+1)) = ite((__VERIFIER_nondet_int2>0),(x9(_n1)+y9(_n1)),((x9(_n1)+y9(_n1))+1))
y9(0) = 1
x9(0) = 1
a9(0) = ite((__VERIFIER_nondet_int2>0),0,1)
(0<=-(__VERIFIER_nondet_int3(_N1)))
(_n1<_N1) -> (__VERIFIER_nondet_int3(_n1)>0)

4. Assumption :

5. Assertion :
((ite((__VERIFIER_nondet_int2>0),(a9(_N1)+1),a9(_N1))%2)==1)
