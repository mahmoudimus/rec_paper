Program Body
{
  int _1_ASSUME;
  _1_ASSUME = 0;
  int _1_PROVE = 0;
  int p1x;
  int p1n;
  int p1i;
  int p1k;
  p1k = 0;
  int p2x;
  int p2n;
  int p2i;
  int p2k;
  p2k = 0;
  _1_ASSUME = (p1x == p2x) && (p1n == p2n);
  p1i = 0;
  while (p1i != p1n)
  {
    p1x = p1x + (p1k * 5);
    p1k = p1k + 1;
    if (p1i >= 5)
    {
      p1k = p1k + 3;
    }

    p1i = p1i + 1;
  }

  p2i = 0;
  while (p2i != p2n)
  {
    p2x = p2x + p2k;
    p2k = p2k + 5;
    if (p2i >= 5)
    {
      p2k = p2k + 15;
    }

    p2i = p2i + 1;
  }

  _1_PROVE = p1x == p2x;
}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ p1k:int p1i:int _1_PROVE:int p2i:int p1n:int p1x:int p2k:int p2n:int _1_ASSUME:int p2x:int}

Output in normal notation:
1. Frame axioms:
p2n1 = p2n
p1n1 = p1n

2. Output equations:
p1i1 = (_N1+0)
p1k1 = p1k5(_N1)
p2i1 = (_N2+0)
p2k1 = p2k10(_N2)
p1x1 = p1x5(_N1)
p2x1 = p2x10(_N2)

3. Other axioms:
p1x5((_n1+1)) = (p1x5(_n1)+(p1k5(_n1)*5))
p1k5((_n1+1)) = ite(((_n1+0)>=5),((p1k5(_n1)+1)+3),(p1k5(_n1)+1))
p1x5(0) = p1x
p1k5(0) = 0
((_N1+0)==p1n)
(_n1<_N1) -> ((_n1+0)!=p1n)
p2x10((_n2+1)) = (p2x10(_n2)+p2k10(_n2))
p2k10((_n2+1)) = ite(((_n2+0)>=5),((p2k10(_n2)+5)+15),(p2k10(_n2)+5))
p2x10(0) = p2x
p2k10(0) = 0
((_N2+0)==p2n)
(_n2<_N2) -> ((_n2+0)!=p2n)

4. Assumption :
((p1x==p2x) and (p1n==p2n))

5. Assertion :
(p1x5(_N1)==p2x10(_N2))

Failed